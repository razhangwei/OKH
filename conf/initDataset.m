% initialize database instances

datasetBase = construct ...
( ...
  'path', '../data/' ...
);

datasetNormBase1 = construct ...
( ...
  'normFilter', {@normEqualVariance, @normZeroMean} ...
);

datasetNormBase2 = construct ...
( ...
  'normFilter', {@normZeroMean, @normEqualLength, @normZeroMean} ...
);

datasetNormBase3 = construct ...
( ...
  'normFilter', {@normZeroMean, @normEqualVariance, @normEqualLength, @normZeroMean} ...
);

datasetNormBase4 = construct ...
( ...
  'normFilter', {@normEqualLength, @normZeroMean} ...
);

datasetNormBase5 = construct ...
( ...
  'normFilter', {@normEqualVariance, @normEqualLength, @normZeroMean} ...
);

datasetUniform = construct ...
( ...
  'super', datasetBase, ...
  'name', '10D-Uniform', ...
  'filename', '10D-Uniform', ...
  'numTest', 1000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 50 ...
);

datasetUniformNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetUniform}, ...
  'name', '10D-Uniform-Norm1' ...
);

datasetUniformNorm1Sub100 = construct ...
( ...
  'super', datasetUniformNorm1, ...
  'name', '10D-Uniform-Norm1-sub100', ...
  'numTest', 10, ...
  'aveNeighbor', 1, ...
  'subsample', 100 ...
);

datasetUniformNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetUniform}, ...
  'name', '10D-Uniform-Norm2' ...
);

datasetNursery = construct ...
( ...
  'super', datasetBase, ...
  'name', 'Nursery', ...
  'filename', 'Nursery', ...
  'numTest', 1000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 100 ...
);

datasetNurseryNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetNursery}, ...
  'name', 'Nursery-Norm1' ...
);

datasetNurseryNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetNursery}, ...
  'name', 'Nursery-Norm2' ...
);

datasetPhotoTourismLite = construct ...
( ...
  'super', datasetBase, ...
  'name', 'Photo-Tourism-Lite', ...
  'filename', 'Photo-Tourism-Lite', ...
  'numTest', 1000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 50 ...
);

datasetPhotoTourismLiteNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetPhotoTourismLite}, ...
  'name', 'Photo-Tourism-Lite-Norm1' ...
);

datasetPhotoTourismLiteNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetPhotoTourismLite}, ...
  'name', 'Photo-Tourism-Lite-Norm2' ...
);

datasetLabelMeLite = construct ...
( ...
  'super', datasetBase, ...
  'name', 'LabelMe-Lite', ...
  'filename', 'LabelMe-Lite', ...
  'numTest', 1000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 50 ...
);

datasetLabelMeLiteNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetLabelMeLite}, ...
  'name', 'LabelMe-Lite-Norm1' ...
);

datasetLabelMeLiteNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetLabelMeLite}, ...
  'name', 'LabelMe-Lite-Norm2' ...
);

datasetPeekaboom = construct ...
( ...
  'super', datasetBase, ...
  'name', 'Peekaboom', ...
  'filename', 'Peekaboom', ...
  'numTest', 1000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 50 ...
);

datasetPeekaboomNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetPeekaboom}, ...
  'name', 'Peekaboom-Norm1' ...
);

datasetPeekaboomNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetPeekaboom}, ...
  'name', 'Peekaboom-Norm2' ...
);

datasetMNISTLite = construct ...
( ...
  'super', datasetBase, ...
  'name', 'MNIST-Lite', ...
  'filename', 'MNIST-Lite', ...
  'numTest', 1000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 50 ...
);

datasetMNISTLiteNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetMNISTLite}, ...
  'name', 'MNIST-Lite-Norm1' ...
);

datasetMNISTLiteNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetMNISTLite}, ...
  'name', 'MNIST-Lite-Norm2' ...
);

datasetKSHDemo = construct ...
( ...
  'super', datasetBase, ...
  'name', 'KSH-Demo', ...
  'filename', 'KSH-Demo', ...
  'numTest', 1000, ...
  'neighborType', 'label' ...
);

datasetKSHDemoNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetKSHDemo}, ...
  'name', 'KSH-Demo-Norm1' ...
);

datasetKSHDemoNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetKSHDemo}, ...
  'name', 'KSH-Demo-Norm2' ...
);

dataset22KLabelMeEuc = construct ...
( ...
  'super', datasetBase, ...
  'name', '22K-LabelMe-Euc', ...
  'filename', '22K-LabelMe', ...
  'numTest', 2000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 110 ...
);

dataset22KLabelMeEucNorm1 = construct ...
( ...
  'super', {datasetNormBase1, dataset22KLabelMeEuc}, ...
  'name', '22K-LabelMe-Euc-Norm1' ...
);

dataset22KLabelMeEucNorm2 = construct ...
( ...
  'super', {datasetNormBase2, dataset22KLabelMeEuc}, ...
  'name', '22K-LabelMe-Euc-Norm2' ...
);

dataset22KLabelMeSem = construct ...
( ...
  'super', dataset22KLabelMeEuc, ...
  'name', '22K-LabelMe-Sem', ...
  'neighborType', 'affinity' ...
);

dataset22KLabelMeSemNorm1 = construct ...
( ...
  'super', {datasetNormBase1, dataset22KLabelMeSem}, ...
  'name', '22K-LabelMe-Sem-Norm1' ...
);

dataset22KLabelMeSemNorm1Sub100 = construct ...
( ...
  'super', dataset22KLabelMeSemNorm1, ...
  'name', '22K-LabelMe-Sem-Norm1-sub100', ...
  'numTest', 10, ...
  'aveNeighbor', 2, ...
  'subsample', 100 ...
);

dataset22KLabelMeSemNorm2 = construct ...
( ...
  'super', {datasetNormBase2, dataset22KLabelMeSem}, ...
  'name', '22K-LabelMe-Sem-Norm2' ...
);

datasetCIFAR10 = construct ...
( ...
  'super', datasetBase, ...
  'name', 'CIFAR-10', ...
  'filename', 'CIFAR-10', ...
  'numTest', 1000, ...
  'neighborType', 'label' ...
);

datasetCIFAR10Norm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetCIFAR10}, ...
  'name', 'CIFAR-10-Norm1' ...
);

datasetCIFAR10Norm1Sub5K = construct ...
( ...
  'super', datasetCIFAR10Norm1, ...
  'name', 'CIFAR-10-Norm1-sub5K', ...
  'numTest', 1000, ...
  'subsample', 5000 ...
);

datasetCIFAR10Norm1Sub100 = construct ...
( ...
  'super', datasetCIFAR10Norm1, ...
  'name', 'CIFAR-10-Norm1-sub100', ...
  'numTest', 10, ...
  'subsample', 100 ...
);

datasetCIFAR10Norm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetCIFAR10}, ...
  'name', 'CIFAR-10-Norm2' ...
);

datasetCIFAR100 = construct ...
( ...
  'super', datasetBase, ...
  'name', 'CIFAR-100', ...
  'filename', 'CIFAR-100', ...
  'numTest', 1000, ...
  'neighborType', 'label' ...
);

datasetCIFAR100Norm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetCIFAR100}, ...
  'name', 'CIFAR-100-Norm1' ...
);

datasetCIFAR100Norm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetCIFAR100}, ...
  'name', 'CIFAR-100-Norm2' ...
);

datasetCIFAR100Coarse = construct ...
( ...
  'super', datasetCIFAR100, ...
  'name', 'CIFAR-100-Coarse', ...
  'labelName', 'coarse_label' ...
);

datasetCIFAR100CoarseNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetCIFAR100Coarse}, ...
  'name', 'CIFAR-100-Coarse-Norm1', ...
  'labelName', 'coarse_label' ...
);

datasetCIFAR100CoarseNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetCIFAR100Coarse}, ...
  'name', 'CIFAR-100-Coarse-Norm2', ...
  'labelName', 'coarse_label' ...
);

datasetMNIST = construct ...
( ...
  'super', datasetBase, ...
  'name', 'MNIST', ...
  'filename', 'MNIST', ...
  'numTest', 1000, ...
  'neighborType', 'label' ...
);

datasetMNISTNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetMNIST}, ...
  'name', 'MNIST-Norm1' ...
);

datasetMNISTNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetMNIST}, ...
  'name', 'MNIST-Norm2' ...
);

datasetNUSWIDE = construct ...
( ...
  'super', datasetBase, ...
  'name', 'NUS-WIDE', ...
  'filename', 'NUS-WIDE', ...
  'numTest', 1000, ...
  'neighborType', 'tag' ...
);

datasetNUSWIDENorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetNUSWIDE}, ...
  'name', 'NUS-WIDE-Norm1' ...
);

datasetNUSWIDENorm1Sub100 = construct ...
( ...
  'super', datasetNUSWIDENorm1, ...
  'name', 'NUS-WIDE-Norm1-sub100', ...
  'filename', 'NUS-WIDE-20K', ...
  'numTest', 10, ...
  'subsample', 100 ...
);

datasetNUSWIDENorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetNUSWIDE}, ...
  'name', 'NUS-WIDE-Norm2' ...
);

datasetSIFT1M = construct ...
( ...
  'super', datasetBase, ...
  'name', 'SIFT-1M', ...
  'filename', 'SIFT-1M', ...
  'numTest', 2000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 22120 ...
);

datasetSIFT1MNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetSIFT1M}, ...
  'name', 'SIFT-1M-Norm1' ...
);

datasetSIFT1MNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetSIFT1M}, ...
  'name', 'SIFT-1M-Norm2' ...
);

datasetTiny1M = construct ...
( ...
  'super', datasetBase, ...
  'name', 'Tiny-1M', ...
  'filename', 'Tiny-1M', ...
  'numTest', 2000, ...
  'neighborType', 'dist', ...
  'aveNeighbor', 49800 ...
);

datasetTiny1MNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetTiny1M}, ...
  'name', 'Tiny-1M-Norm1' ...
);

datasetTiny1MNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetTiny1M}, ...
  'name', 'Tiny-1M-Norm2' ...
);

datasetImageNetSIFT = construct ...
( ...
  'super', datasetBase, ...
  'numTest', 2000, ...
  'neighborType', 'label' ...
);

datasetImageNetSIFT10 = construct ...
( ...
  'super', datasetImageNetSIFT, ...
  'name', 'ImageNet-SIFT10', ...
  'filename', 'ImageNet-SIFT10' ...
);

datasetImageNetSIFT10Norm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetImageNetSIFT10}, ...
  'name', 'ImageNet-SIFT10-Norm1' ...
);

datasetImageNetSIFT10Norm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetImageNetSIFT10}, ...
  'name', 'ImageNet-SIFT10-Norm2' ...
);

datasetImageNetSIFT20 = construct ...
( ...
  'super', datasetImageNetSIFT, ...
  'name', 'ImageNet-SIFT20', ...
  'filename', 'ImageNet-SIFT20' ...
);

datasetImageNetSIFT20Norm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetImageNetSIFT20}, ...
  'name', 'ImageNet-SIFT20-Norm1' ...
);

datasetImageNetSIFT20Norm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetImageNetSIFT20}, ...
  'name', 'ImageNet-SIFT20-Norm2' ...
);

datasetImageNetSIFT100 = construct ...
( ...
  'super', datasetImageNetSIFT, ...
  'name', 'ImageNet-SIFT100', ...
  'filename', 'ImageNet-SIFT100' ...
);

datasetImageNetSIFT100Norm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetImageNetSIFT100}, ...
  'name', 'ImageNet-SIFT100-Norm1' ...
);

datasetImageNetSIFT100Norm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetImageNetSIFT100}, ...
  'name', 'ImageNet-SIFT100-Norm2' ...
);

datasetImageNetBOW = construct ...
( ...
  'super', datasetBase, ...
  'name', 'ImageNet-BOW', ...
  'filename', 'ImageNet-BOW', ...
  'numTest', 2000, ...
  'neighborType', 'label' ...
);

datasetImageNetBOWNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetImageNetBOW}, ...
  'name', 'ImageNet-BOW-Norm1' ...
);

datasetImageNetBOWNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetImageNetBOW}, ...
  'name', 'ImageNet-BOW-Norm2' ...
);

datasetFML = construct ...
( ...
  'super', datasetBase, ...
  'name', 'FML', ...
  'filename', 'FML', ...
  'numTest', 2000, ...
  'neighborType', 'value', ...
  'aveNeighbor', 200 ...
);

datasetFMLAgree = construct ...
( ...
  'super', datasetFML, ...
  'name', 'FML-Agree', ...
  'valueName', 'value_agree' ...
);

datasetFMLAgreeNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetFMLAgree}, ...
  'name', 'FML-Agree-Norm1' ...
);

datasetFMLAgreeNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetFMLAgree}, ...
  'name', 'FML-Agree-Norm2' ...
);

datasetFMLAgreeNorm1Sub100 = construct ...
( ...
  'super', datasetFMLAgreeNorm1, ...
  'name', 'FML-Agree-Norm1-Sub100', ...
  'filename', 'FML-100', ...
  'numTest', 10, ...
  'aveNeighbor', 10 ...
);

datasetFMLDeserve = construct ...
( ...
  'super', datasetFML, ...
  'name', 'FML-Deserve', ...
  'valueName', 'value_deserve' ...
);

datasetFMLDeserveNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetFMLDeserve}, ...
  'name', 'FML-Deserve-Norm1' ...
);

datasetFMLComment = construct ...
( ...
  'super', datasetFML, ...
  'name', 'FML-Comment', ...
  'valueName', 'value_comment' ...
);

datasetFMLCommentNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetFMLComment}, ...
  'name', 'FML-Comment-Norm1' ...
);

datasetFMLLabel = construct ...
( ...
  'super', datasetFML, ...
  'name', 'FML-Label', ...
  'neighborType', 'label' ...
);

datasetFMLAgreeLabel = construct ...
( ...
  'super', datasetFMLLabel, ...
  'name', 'FML-Agree-Label', ...
  'labelName', 'label_agree' ...
);

datasetFMLAgreeLabelNorm1 = construct ...
( ...
  'super', {datasetNormBase1, datasetFMLAgreeLabel}, ...
  'name', 'FML-Agree-Label-Norm1' ...
);

datasetFMLAgreeLabelNorm2 = construct ...
( ...
  'super', {datasetNormBase2, datasetFMLAgreeLabel}, ...
  'name', 'FML-Agree-Label-Norm2' ...
);

datasetFMLAgreeLabelNorm1Sub100 = construct ...
( ...
  'super', datasetFMLAgreeLabelNorm1, ...
  'name', 'FML-Agree-Label-Norm1-Sub100', ...
  'filename', 'FML-100', ...
  'numTest', 10, ...
  'aveNeighbor', 10 ...
);

varNames = who('dataset*');
for varName = varNames'
  varName = varName{1};
  v = getVar(varName);
  v = inheritField(v);
  setVar(varName, v);
end
clear v varName varNames;
